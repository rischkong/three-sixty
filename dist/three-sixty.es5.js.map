{"version":3,"file":"three-sixty.es5.js","sources":["../src/image-loader.ts","../src/three-sixty.ts"],"sourcesContent":["export class ImageLoader {\n\n    /**\n     * @type {{[string]: Image}}\n     */\n    private cache: any = {};\n\n    /**\n     * Load an image\n     *\n     * @param {string} url\n     * @returns {Promise<Image>}\n     */\n    public load(url: string): Promise<any> {\n        return new Promise((resolve) => {\n            if (this.cache.hasOwnProperty(url)) {\n                return resolve(this.cache[url]);\n            }\n\n            const image = new Image();\n\n            image.onload = () => {\n                this.cache[url] = image;\n\n                resolve(image);\n            };\n\n            image.src = url;\n        });\n    }\n}\n","import { ConfigurationInterface } from './interfaces/configuration.interface';\nimport { ImageLoader } from './image-loader';\nimport { HotspotInterface } from './interfaces/hotspot.interface';\nimport { ImageSetInterface } from './interfaces/image-set.interface';\nconst Hammer = require('hammerjs');\n\nexport default class ThreeSixty {\n\n    /**\n     * @type {string}\n     */\n    public static CONTAINER_CLASS = 'three-sixty-container';\n\n    /**\n     * @type {string}\n     */\n    public static HOTSPOT_CLASS = 'three-sixty__hotspot';\n\n    /**\n     * @type {string}\n     */\n    public static HOTSPOT_ACTIVE_CLASS = 'three-sixty__hotspot--active';\n\n    /**\n     * Array of image sprites\n     *\n     * @type {string[]}\n     */\n    private images: string[];\n\n    /**\n     * Image configuration\n     *\n     * @type {ImageSetInterface}\n     */\n    private imageSet: ImageSetInterface;\n\n    /**\n     * @type {Hammer}\n     */\n    private hammer: any;\n\n    /**\n     * @type {HTMLElement}\n     */\n    private containerElement: HTMLElement;\n\n    /**\n     * @type {HTMLElement[]}\n     */\n    private hotspotElements: HTMLElement[] = [];\n\n    /**\n     * @type {CanvasRenderingContext2D}\n     */\n    private canvas2dContext: CanvasRenderingContext2D;\n\n    /**\n     * @type {ImageLoader}\n     */\n    private imageLoader: ImageLoader;\n\n    /**\n     * Angle of the current image\n     * Number between 0 and 360\n     *\n     * @type {number}\n     */\n    private angle: number = 0;\n\n    /**\n     * Angle of the image before the drag process began\n     *\n     * @type {number}\n     */\n    private preDragAngle: number = 0;\n\n    /**\n     * @param {HTMLCanvasElement} canvasElement\n     * @param {ConfigurationInterface} configuration\n     */\n    constructor(private canvasElement: HTMLCanvasElement, private configuration: ConfigurationInterface) {\n        this.canvas2dContext = this.canvasElement.getContext('2d') as CanvasRenderingContext2D;\n        this.imageLoader = new ImageLoader();\n\n        window.onresize = () => this.images = this.getActiveImages();\n    }\n\n    /**\n     * Initialize the three sixty widget\n     *\n     * @param {ImageSetInterface} imageSet - Array of image sprites\n     * @param {number} startAngle - The initial angle to show (number between 0 and 360)\n     */\n    public initialize(imageSet: ImageSetInterface, startAngle: number = 0) {\n        if (startAngle < 0 || startAngle > 360) {\n            throw new Error('The specified start angle must be between 0 and 360.');\n        }\n\n        this.angle = startAngle;\n        this.imageSet = imageSet;\n        this.images = this.getActiveImages();\n\n        // Wrap the canvas element\n        this.containerElement = document.createElement('div');\n        this.containerElement.classList.add(ThreeSixty.CONTAINER_CLASS);\n        (this.canvasElement.parentElement as HTMLElement).insertBefore(this.containerElement, this.canvasElement);\n        this.containerElement.appendChild(this.canvasElement);\n\n        this.initializeHotspots();\n        this.initializeEventListeners();\n\n        const imageIndexes = this.getImageIndexesForCurrentAngle();\n\n        this.imageLoader.load(this.images[imageIndexes.targetSpriteIndex])\n            .then((image) => this.drawAngle(image, imageIndexes.targetImageIndex));\n    }\n\n    /**\n     * Update the configuration and re-render the hotspots\n     *\n     * @param {ConfigurationInterface} configuration\n     */\n    public updateConfiguration(configuration: ConfigurationInterface) {\n        this.configuration = configuration;\n\n        this.hotspotElements.forEach((hotspotElement: HTMLElement) => hotspotElement.parentElement.removeChild(hotspotElement));\n        this.hotspotElements = [];\n\n        this.initializeHotspots();\n    }\n\n    /**\n     * Update and re-render the images\n     *\n     * @param {ImageSetInterface} imageSet\n     */\n    public updateImages(imageSet: ImageSetInterface) {\n        this.imageSet = imageSet;\n        this.images = this.getActiveImages();\n\n        const imageIndexes = this.getImageIndexesForCurrentAngle();\n\n        this.imageLoader.load(this.images[imageIndexes.targetSpriteIndex])\n            .then((image) => this.drawAngle(image, imageIndexes.targetImageIndex));\n    }\n\n    /**\n     * Preload all images\n     *\n     * @returns {Promise<null>}\n     */\n    public preload(): Promise<null> {\n        return new Promise((resolve) => {\n            let imagesLoaded = 0;\n\n            /**\n             * Preload a single image\n             * Resolve the Promise if all images were loaded\n             *\n             * @param {string} url\n             */\n            const preloadImage = (url: string) => {\n                this.imageLoader.load(url)\n                    .then(() => {\n                        imagesLoaded++;\n\n                        if (imagesLoaded === this.images.length) {\n                            resolve();\n                        }\n                    });\n            };\n\n            this.images.forEach(preloadImage.bind(this));\n        });\n    }\n\n    /**\n     * Get the active images for the current browser width\n     *\n     * @returns {string[]}\n     */\n    private getActiveImages(): string[] {\n        const width = window.outerWidth;\n        const breakpoints = Object.keys(this.imageSet);\n\n        const activeBreakpoint = breakpoints.sort().reverse().find((breakpoint: string) => {\n            if (parseFloat(breakpoint) <= width) {\n                return true;\n            }\n        });\n        return this.imageSet[activeBreakpoint];\n    }\n\n    /**\n     * Initialize the hotspots\n     */\n    private initializeHotspots() {\n        if (this.configuration.hotspots) {\n            this.configuration.hotspots.forEach((hotspot: HotspotInterface) => {\n                const hotspotElement = document.createElement('div');\n\n                hotspotElement.classList.add(ThreeSixty.HOTSPOT_CLASS);\n                hotspotElement.innerText = hotspot.text;\n\n                if (hotspot.top) {\n                    hotspotElement.style.top = hotspot.top;\n                }\n                if (hotspot.left) {\n                    hotspotElement.style.left = hotspot.left;\n                }\n\n                this.hotspotElements.push(hotspotElement);\n            });\n            this.hotspotElements.forEach((hotSpotElement) => this.containerElement.appendChild(hotSpotElement));\n\n            this.showActiveHotspots();\n        }\n    }\n\n    /**\n     * Show the active hotspots\n     */\n    private showActiveHotspots() {\n        if (this.configuration.hotspots) {\n            this.configuration.hotspots.forEach((hotspot: HotspotInterface, i: number) => {\n                if (hotspot.angle <= this.angle && hotspot.endAngle >= this.angle) {\n                    this.hotspotElements[i].classList.add(ThreeSixty.HOTSPOT_ACTIVE_CLASS);\n                } else {\n                    this.hotspotElements[i].classList.remove(ThreeSixty.HOTSPOT_ACTIVE_CLASS);\n                }\n            });\n        }\n    }\n\n    /**\n     * Initialize the event listeners\n     */\n    private initializeEventListeners() {\n        this.hammer = new Hammer(this.canvasElement);\n\n        this.hammer.get('pan').set({direction: Hammer.DIRECTION_HORIZONTAL, threshold: 0});\n\n        this.hammer.on('pan', this.onDrag.bind(this));\n        this.hammer.on('panstart', this.onDragStart.bind(this));\n    }\n\n    /**\n     * Get the target image indexes for the current angle\n     */\n    private getImageIndexesForCurrentAngle(): {targetImageIndex: number, targetSpriteIndex: number} {\n        let targetImageIndex = Math.round(this.angle / (360 / this.configuration.angles));\n        let targetSpriteIndex = Math.floor(targetImageIndex / this.configuration.anglesPerImage);\n\n        return {targetImageIndex: targetImageIndex % this.configuration.anglesPerImage, targetSpriteIndex};\n    }\n\n    /**\n     * Draw a specific angle\n     *\n     * @param {Image} image\n     * @param {number} imageIndex\n     */\n    private drawAngle(image: any, imageIndex: number) {\n        let loaded = false;\n\n        const _drawAngle = () => {\n            this.canvas2dContext.drawImage(\n                image,\n                0,\n                -this.canvasElement.height * imageIndex,\n                this.canvasElement.width,\n                this.canvasElement.height * this.configuration.anglesPerImage\n            );\n\n            if (!loaded) {\n                window.requestAnimationFrame(_drawAngle.bind(this));\n\n                loaded = true;\n            }\n        };\n\n        window.requestAnimationFrame(_drawAngle.bind(this));\n    }\n\n    /**\n     * Drag the angle\n     *\n     * @param {{deltaX: number}} e\n     */\n    private onDrag(e: {deltaX: number}) {\n\n        // Calculate new image angle\n        this.adaptAngle(-e.deltaX);\n\n        const imageIndexes = this.getImageIndexesForCurrentAngle();\n\n        // Load and render new image angle\n        this.imageLoader.load(this.images[imageIndexes.targetSpriteIndex])\n            .then((image) => this.drawAngle(image, (imageIndexes.targetImageIndex)));\n\n        this.showActiveHotspots();\n    }\n\n    /**\n     * Cache the angle before the drag starts\n     */\n    private onDragStart() {\n        this.preDragAngle = this.angle;\n    }\n\n    /**\n     * Recalculate the canvas angle\n     *\n     * @param {number} distance\n     */\n    private adaptAngle(distance: number) {\n        distance = Math.ceil(distance * (this.configuration.speedFactor ? this.configuration.speedFactor : 5));\n\n        const width = window.innerWidth;\n        const dx = (distance / width);\n        let tmpAngle = ((1 - (this.preDragAngle / 360)) + dx * 1.5);\n\n        while (tmpAngle < 0) {\n            tmpAngle++;\n        }\n\n        tmpAngle = tmpAngle % 1;\n\n        this.angle = -360 * tmpAngle + 360;\n    }\n}\n"],"names":[],"mappings":"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"}